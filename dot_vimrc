"Автоматическая установка менеджера плагинов Vim-Plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif

call plug#begin()
Plug 'easymotion/vim-easymotion'
Plug 'rafi/awesome-vim-colorschemes'
"Plug 'lyokha/vim-xkbswitch'
"Plug 'christoomey/vim-system-copy'
"Plug 'jlanzarotta/bufexplorer'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
"Plug 'vim-airline/vim-airline-themes'
call plug#end()

"colorscheme alduin
"let g:alduin_Shout_Dragon_Aspect = 1
"set background=dark

syntax on

"let g:airline_theme='minimalist'

"set expandtab           "Замена табов на пробелы 
"set tabstop=2           "Кол-во пробелов при нажатии TAB      
"set cmdheight=5        "Высота строки CMD
"set ignorecase          "Поиск без учёта регистра
"set smartcase           "Умный поиск без учёта регистра
"set hidden
"set showtabline=2
"set mousehide           "Курсор мыши исчезает
"set mouse=a            "Управление мышью
"set cursorline
"set foldcolumn=1       "Отступ слева
set number              "Показывать номер строк
set showcmd             "Строка CMD. Показывает введённые команды
set hlsearch            "Подсвечивать поиск /
set encoding=utf8       "Кодировка для отобр. кириллич. символов
set incsearch           "Инкрементальный поиск. Введёные слова через / подсвечиваются на ходу
set ttimeoutlen=10      "Понизить задержку ввода escape последовательностей
set pastetoggle=<F3>    "Режим вставки для кода без отступов

"Изменение курсора в разных режимах:
"Где 1 - это мигающий прямоугольник
"2 - обычный прямоугольник
"3 - мигающее подчёркивание
"4 - просто подчёркивание
"5 - мигающая вертикальная черта
"6 - просто вертикальная черта
let &t_SI.="\e[5 q" "SI = режим вставки
let &t_SR.="\e[3 q" "SR = режим замены
let &t_EI.="\e[1 q" "EI = нормальный режим

"Копировать и вставить в общий буфер обмена 
"vmap <C-c> "+yi<ESC>
"vmap <C-x> "+c<ESC>
"vmap <C-v> c<ESC>"+p
"imap <C-v> <ESC>"+pa

""Показать лист буферов и выбрать буфер по номеру, \r
nnoremap <Leader>r :ls<CR>:b<Space>

"Снять подсветку после поиска /, Ctrl+l
"nnoremap <silent> <C-L> :nohlsearch<CR><C-L> 
"
""Режим вставки для кода без отступов, \pp
map <leader>pp :setlocal paste!<cr> 

map <Leader> <Plug>(easymotion-prefix)

"\L, переход на начало какой-то строки
"map <Leader>L <Plug>(easymotion-bd-jk)
"nmap <Leader>L <Plug>(easymotion-overwin-line)
"
""TAB - перейти к следующей вкладке, Shift+Tab - к предыдущей
nnoremap  <silent>   <tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bnext<CR>
nnoremap  <silent> <s-tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bprevious<CR>

"set airline 
"let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#tab_nr_type = 1 " tab number
"let g:airline#extensions#tabline#show_tab_nr = 1
"let g:airline#extensions#tabline#formatter = 'default'
"let g:airline#extensions#tabline#buffer_nr_show = 1
"let g:airline#extensions#tabline#fnametruncate = 16
"let g:airline#extensions#tabline#fnamecollapse = 2
"let g:airline#extensions#tabline#buffer_idx_mode = 1
"
"nmap <leader>1 <Plug>AirlineSelectTab1
"nmap <leader>2 <Plug>AirlineSelectTab2
"nmap <leader>3 <Plug>AirlineSelectTab3
"nmap <leader>4 <Plug>AirlineSelectTab4
"nmap <leader>5 <Plug>AirlineSelectTab5
"nmap <leader>6 <Plug>AirlineSelectTab6
"nmap <leader>7 <Plug>AirlineSelectTab7
"nmap <leader>8 <Plug>AirlineSelectTab8
"nmap <leader>9 <Plug>AirlineSelectTab9
"
"let g:airline_powerline_fonts = 1 "Включить поддержку Powerline шрифтов
"let g:airline#extensions#keymap#enabled = 0 "Не показывать текущий маппинг
"let g:airline_section_z = "\ue0a1:%l/%L Col:%c" "Кастомная графа положения
"курсора
"let g:Powerline_symbols='unicode' "Поддержка unicode
"let g:airline#extensions#xkblayout#enabled = 0 "Отображение раскладки в
"строке состояния
"let g:XkbSwitchEnabled = 1 "Дёргаем рубильник
"
""Нажать s, поиск и переход по всему экрану по 2-ум символам
"Нажать t, поиск и переход после курсора по 2-ум символам
""nmap s <Plug>(easymotion-s2) 
"nmap t <Plug>(easymotion-t2) 
"
""Для запоминания положения курсора раскоментировать
"augroup resCur
""  autocmd!
"  autocmd BufReadPost * call setpos(".", getpos("'\""))
"augroup END
"
